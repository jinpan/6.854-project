import networkx as nx
from networkx.algorithms.flows import min_cost_flow_cost as min_cost_flow
from max_concurrent_flow import *

''' Test suite for max concurrent flow algorithms
    Types of test cases we want to build:
        -Easy test case with one commodity, solvable by hand
        -Easy test case with more than one commodity, solvable by hand
        -Easy test case with >1 commodity with weird betas
        This should be enough to assure functionality. 
    
    Now we can build larger test cases to do experiments and profile on 
    (we might do this in another file)
'''


##########Test cases###############
#Basic test case: Simple flow graph
#This graph right here: http://en.wikipedia.org/wiki/File:Max-flow_min-cut_example.svg
class TestCase1():
    def __init__(self):
        edgeList = []
        edgeList.append(Edge("S","1",4))
        edgeList.append(Edge("S","2",3))
        edgeList.append(Edge("1","2",3))
        edgeList.append(Edge("1","t",4))
        edgeList.append(Edge("2","t",5))
        print edgeList

print TestCase1();
