import networkx as nx
from max_concurrent_flow import *

'''
Code that contains all the experiments. Will write useful data to csv files
Types of information we want to be able to glean from graphs:
-Dependence on epsilon
-Dependence on k
-Dependence on k groupings (more grouped, more better?)

Types of graphs we want to run on:
-Random graphs of x nodes for x in [50,500,5000]
-Places where we can caluclate L

Algorithms we want to use:
-Standard algorithm
-Algorithm with 2-approx
-Algorithm with 2-Approx, karakosta
-Alogrithm with karakosta
'''

def random_connected_graph(numNodes, numEdges):
    while True:
        random_graph = nx.gnm_random_graph(numNodes,numEdges, directed = True)
        if nx.is_connected(random_graph): return random_graph

print "Alpha"
for i in xrange(10):
    random_connected_graph(500,2000)
